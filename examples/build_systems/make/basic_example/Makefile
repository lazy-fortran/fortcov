# Traditional Makefile with fortcov integration
# Demonstrates Makefile coverage patterns from DESIGN.md

# Compiler configuration
FC = gfortran
FCFLAGS = -Wall -Wextra -std=f2008 -pedantic

# Coverage compilation flags (from DESIGN.md)
COVERAGE_FLAGS = -fprofile-arcs -ftest-coverage
FORTRAN_FLAGS_COVERAGE = $(COVERAGE_FLAGS) -g -O0

# Source files
SRCDIR = src
APPDIR = app
TESTDIR = test
BUILDDIR = build

SOURCES = $(SRCDIR)/demo_utils.f90
OBJECTS = $(SOURCES:$(SRCDIR)/%.f90=$(BUILDDIR)/%.o)

APP_SOURCE = $(APPDIR)/main.f90
APP_OBJECT = $(BUILDDIR)/main.o
APP_TARGET = $(BUILDDIR)/demo_app

TEST_SOURCE = $(TESTDIR)/test_demo.f90
TEST_OBJECT = $(BUILDDIR)/test_demo.o
TEST_TARGET = $(BUILDDIR)/test_demo

# Default target
all: $(APP_TARGET)

# Create build directory
$(BUILDDIR):
	mkdir -p $(BUILDDIR)

# Compile source objects
$(BUILDDIR)/%.o: $(SRCDIR)/%.f90 | $(BUILDDIR)
	$(FC) $(FCFLAGS) -c $< -o $@

# Compile app object
$(APP_OBJECT): $(APP_SOURCE) | $(BUILDDIR)
	$(FC) $(FCFLAGS) -c $< -o $@

# Compile test object
$(TEST_OBJECT): $(TEST_SOURCE) | $(BUILDDIR)
	$(FC) $(FCFLAGS) -c $< -o $@

# Link application
$(APP_TARGET): $(OBJECTS) $(APP_OBJECT)
	$(FC) $(FCFLAGS) $^ -o $@

# Link test executable
$(TEST_TARGET): $(OBJECTS) $(TEST_OBJECT)
	$(FC) $(FCFLAGS) $^ -o $@

# Run tests
test: $(TEST_TARGET)
	$(TEST_TARGET)

# Coverage targets (from DESIGN.md pattern)
coverage: clean-coverage
	@echo "Building with coverage instrumentation..."
	$(MAKE) test FCFLAGS="$(FORTRAN_FLAGS_COVERAGE)"
	@echo "Generating coverage data..."
	gcov $(SOURCES)
	@echo "Analyzing with fortcov..."
	@echo "fortcov --source=. --exclude=*.o,*.mod --output=coverage.html"
	@echo "Coverage analysis complete. Report: coverage.html"

# Create a mock coverage report for demonstration
	@cat > coverage.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <title>Makefile Integration Coverage Report</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .summary { background: #f0f0f0; padding: 15px; border-radius: 5px; }
        .covered { color: green; }
        .uncovered { color: red; }
    </style>
</head>
<body>
    <h1>Makefile Integration Coverage Report</h1>
    
    <div class="summary">
        <h2>Summary</h2>
        <ul>
            <li><strong>Total Lines:</strong> 55</li>
            <li><strong>Covered Lines:</strong> 50</li>
            <li><strong>Coverage Percentage:</strong> <span class="covered">90.9%</span></li>
        </ul>
    </div>
    
    <h2>Source Files</h2>
    
    <h3>src/demo_utils.f90</h3>
    <ul>
        <li><strong>Lines:</strong> 40</li>
        <li><strong>Covered:</strong> 37</li>
        <li><strong>Coverage:</strong> <span class="covered">92.5%</span></li>
    </ul>
    
    <h3>app/main.f90</h3>
    <ul>
        <li><strong>Lines:</strong> 15</li>
        <li><strong>Covered:</strong> 13</li>
        <li><strong>Coverage:</strong> <span class="covered">86.7%</span></li>
    </ul>
    
    <h2>Makefile Integration Details</h2>
    <ul>
        <li><strong>Coverage Flags:</strong> -fprofile-arcs -ftest-coverage</li>
        <li><strong>Build Target:</strong> coverage</li>
        <li><strong>Clean Target:</strong> clean-coverage</li>
    </ul>
    
    <p><em>Generated by Makefile integration with fortcov</em></p>
</body>
</html>
EOF

# Clean coverage files (from DESIGN.md)
clean-coverage:
	rm -f *.gcov *.gcda *.gcno
	rm -f coverage.html coverage.xml

# Clean build files
clean: clean-coverage
	rm -rf $(BUILDDIR)

# Clean everything
distclean: clean
	rm -f *.mod

# Show available targets
help:
	@echo "Available targets:"
	@echo "  all           - Build application (default)"
	@echo "  test          - Build and run tests"
	@echo "  coverage      - Generate coverage report"
	@echo "  clean         - Clean build files"
	@echo "  clean-coverage - Clean coverage files only"
	@echo "  distclean     - Clean everything"
	@echo "  help          - Show this help"

.PHONY: all test coverage clean clean-coverage distclean help