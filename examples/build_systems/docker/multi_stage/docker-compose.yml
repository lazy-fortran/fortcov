# Docker Compose configuration for fortcov coverage analysis
# Demonstrates orchestrated coverage analysis with multiple services

version: '3.8'

services:
  # Main coverage analysis service
  fortcov-coverage:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - COVERAGE_ENABLED=true
      - BUILD_TYPE=coverage
    volumes:
      - coverage-reports:/coverage
    networks:
      - fortcov-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.coverage.rule=Host(`coverage.localhost`)"
      - "traefik.http.routers.coverage.entrypoints=web"

  # Development environment with mounted source
  fortcov-dev:
    image: fortran/gfortran:latest
    working_dir: /workspace
    volumes:
      - .:/workspace
      - coverage-reports:/reports
    environment:
      - FC=gfortran
      - COVERAGE_FLAGS=-fprofile-arcs -ftest-coverage
    command: |
      sh -c "
        echo 'Installing FPM...'
        curl -fsSL https://github.com/fortran-lang/fpm/releases/latest/download/fpm-linux-x86_64 -o /usr/local/bin/fpm
        chmod +x /usr/local/bin/fpm
        
        echo 'Development environment ready'
        echo 'Run: docker-compose exec fortcov-dev fpm test --flag \"-fprofile-arcs -ftest-coverage\"'
        tail -f /dev/null
      "
    networks:
      - fortcov-network

  # Database for storing coverage history (optional)
  coverage-db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: coverage_history
      POSTGRES_USER: fortcov
      POSTGRES_PASSWORD: coverage123
    volumes:
      - coverage-db-data:/var/lib/postgresql/data
    networks:
      - fortcov-network

  # Web interface for coverage trends (optional)
  coverage-dashboard:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - fortcov-network
    depends_on:
      - coverage-db

volumes:
  coverage-reports:
    driver: local
  coverage-db-data:
    driver: local
  grafana-data:
    driver: local

networks:
  fortcov-network:
    driver: bridge